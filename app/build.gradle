apply plugin: 'com.android.application'

android {
  compileSdkVersion 29
//  compileSdkVersion rootProject.ext.android.compileSdkVersion
//  buildToolsVersion rootProject.ext.android.buildToolsVersion
  defaultConfig {
    applicationId "com.fanfull.handheldtools"
    minSdkVersion rootProject.ext.android.minSdkVersion
    targetSdkVersion rootProject.ext.android.targetSdkVersion

    versionCode 225
    versionName "v0.2.5-alpha"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    ndk {
      abiFilters "armeabi"
    }
    multiDexEnabled true
  }

  signingConfigs {
    release {

      // 自行在 local.properties 文件中添加相应信 如：signing.storeFile=D\:\\workspace\\jks\\fanfull.jks
      //      signing.storeFile=D\:\\workspace\\jks\\fanfull.jks
      //      signing.storePassword=123456
      //      signing.keyAlias=fanfull
      //      signing.keyPassword=123456
      //            v2SigningEnabled true

      // 发布版本时无法使用这种方式，否则在JitPack会构建失败
      //签名文件信息 保存在 local.properties 文件中
      //      Properties properties = new Properties()
      //      InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
      //      properties.load(inputStream)
      //      storeFile file(properties.getProperty('signing.storeFile'))
      //      storePassword properties.getProperty('signing.storePassword')
      //      keyAlias properties.getProperty('signing.keyAlias')
      //      keyPassword properties.getProperty('signing.keyPassword')
    }
    systemSign {
      // 签名为系统APP
      storeFile file('../fanfull_rd.keystore')
      storePassword 'fanfull'
      keyAlias 'fanfull'
      keyPassword 'fanfull'
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.systemSign
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      debuggable = true
      signingConfig signingConfigs.systemSign
    }
  }

  task copyRelease(type: Copy, group: 'myTask', description: 'assembleRelease构建项目，复制apk') {
    dependsOn 'assembleRelease'
    //      String destDir = "D:/!Desktop/${rootProject.name}-aar/"
    String destDir = "${rootDir}/apk/"
    //  File srcFile = new File("build/outputs/apk/${project.name}-debug.aar")
    File srcFile = new File("build/outputs/apk/release/app-release.apk")

    from srcFile
    into destDir

    /* 重命名方式1： 使用一个闭合映射文件名 */
    String projectName = "手持测试"
    String apkName = "${projectName}_" +
        "${defaultConfig.versionName}_" +
        "release_" +
        "${new Date().format("yyyy-MM-dd_HH_mm")}"
    rename { String fileName ->
      fileName.replace('app-release', "${apkName}")
    }
  }

//  applicationVariants.all { variant ->
//    if (variant.buildType.name != "debug") {
//      // apk 输出路径: rootDir/apk/
//      def apkDirectory = new File(project.rootDir.absolutePath + "/apk/")
//
//      // apk 输出名称: projectName_v7_1.0.0_Official_release_2019-05-20_09_56.apk
//      def releaseTime = new Date().format("yyyy-MM-dd_HH_mm")
//      def projectName = "手持测试"
//      def apkName = "${projectName}_" +
//          "${defaultConfig.versionName}_" +
//          "${variant.buildType.name}_" +
//          "${releaseTime}.apk"
//      // gradle 3.3+
//      variant.getPackageApplicationProvider().get().outputDirectory = apkDirectory
//      variant.getPackageApplicationProvider().get().outputScope.apkDatas.forEach { apkData ->
//        apkData.outputFileName = apkName
//      }
//      // gradle 3.0+
//      //            variant.getPackageApplication().outputDirectory = apkDirectory
//      //            variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
//      //                apkData.outputFileName = apkName
//      //            }
//    }
//  }

  compileOptions {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
  //  implementation fileTree(dir: 'libs', include: ['*.aar'])
  implementation project(':libBase')
  implementation project(':libHardware')
  //  implementation 'com.blankj:utilcodex:1.29.0'
  //  implementation 'com.apkfuns.logutils:library:1.7.5'
  //  implementation 'com.apkfuns.log2file:log2file:1.3.0'
  //  implementation 'com.gitee.fan_full:Handheld3Tools:v0.1.0'

  implementation 'com.google.android.material:material:1.2.1'
  implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

  implementation 'androidx.appcompat:appcompat:1.2.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  implementation 'androidx.preference:preference:1.1.0-alpha04'

  // crash
  implementation 'cat.ereza:customactivityoncrash:2.3.0'
  implementation 'com.wanjian:cockroach:0.0.5'
  //    debugImplementation 'com.hjq:logcat:6.8'
  //  debugImplementation("com.simple:spiderman:1.1.6") {
  //    exclude group: "androidx.appcompat"
  //  }
  //  releaseImplementation("com.simple:spiderman-no-op:1.1.4") {
  //    exclude group: "androidx.appcompat"
  //  }

  /* view */
  implementation 'com.lxj:xpopup:2.2.23'
//  implementation rootProject.ext.dependencies["xpopup"]
  implementation 'com.github.niniloveyou:StateButton:v1.0.0'
  implementation 'com.github.medyo:android-about-page:1.3'
  //  implementation 'com.github.daniel-stoneuk:material-about-library:3.1.2'
  implementation 'com.victor:lib:1.0.4'

  /* network */
  implementation 'io.netty:netty-all:4.1.10.Final'
//  implementation rootProject.ext.dependencies["netty"]
  implementation 'com.google.code.gson:gson:2.8.5'
//  implementation rootProject.ext.dependencies["gson"]

  /* db */
  debugImplementation rootProject.ext.dependencies["debug-db"]
}
