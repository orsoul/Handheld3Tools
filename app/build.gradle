apply plugin: 'com.android.application'

android {
  compileSdkVersion 28
  buildToolsVersion "28.0.3"
  defaultConfig {
    applicationId "com.fanfull.handheldtools"
    //noinspection MinSdkTooLow
    minSdkVersion 19
    //noinspection ExpiredTargetSdkVersion
    targetSdkVersion 28

    versionCode 1
    versionName "v0.1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    //        multiDexEnabled = true

    ndk {
      abiFilters "armeabi"
    }
  }

  signingConfigs {
    release {

      // 自行在 local.properties 文件中添加相应信 如：signing.storeFile=D\:\\workspace\\jks\\fanfull.jks
      //      signing.storeFile=D\:\\workspace\\jks\\fanfull.jks
      //      signing.storePassword=123456
      //      signing.keyAlias=fanfull
      //      signing.keyPassword=123456
      //            v2SigningEnabled true

      // 发布版本时无法使用这种方式，否则在JitPack会构建失败
      //签名文件信息 保存在 local.properties 文件中
      //      Properties properties = new Properties()
      //      InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
      //      properties.load(inputStream)
      //      storeFile file(properties.getProperty('signing.storeFile'))
      //      storePassword properties.getProperty('signing.storePassword')
      //      keyAlias properties.getProperty('signing.keyAlias')
      //      keyPassword properties.getProperty('signing.keyPassword')
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      debuggable = true
    }
  }

  applicationVariants.all { variant ->
    if (variant.buildType.name != "debug") {
      // apk 输出路径: rootDir/apk/
      def apkDirectory = new File(project.rootDir.absolutePath + "/apk/")

      // apk 输出名称: projectName_v7_1.0.0_Official_release_2019-05-20_09_56.apk
      def releaseTime = new Date().format("yyyy-MM-dd_HH_mm")
      def projectName = "手持测试"
      def apkName = "${projectName}_" +
          "${defaultConfig.versionName}_" +
          "${variant.buildType.name}_" +
          "${releaseTime}.apk"
      // gradle 3.3+
      variant.getPackageApplicationProvider().get().outputDirectory = apkDirectory
      variant.getPackageApplicationProvider().get().outputScope.apkDatas.forEach { apkData ->
        apkData.outputFileName = apkName
      }
      // gradle 3.0+
      //            variant.getPackageApplication().outputDirectory = apkDirectory
      //            variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
      //                apkData.outputFileName = apkName
      //            }
    }
  }

  compileOptions {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation project(':libBase')
  implementation project(':libHardware')

  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

  // crash
  implementation 'cat.ereza:customactivityoncrash:2.3.0'
  implementation 'com.wanjian:cockroach:0.0.5'
  //    debugImplementation 'com.hjq:logcat:6.8'

  /* view */
  implementation 'com.lxj:xpopup:2.0.3'
}
