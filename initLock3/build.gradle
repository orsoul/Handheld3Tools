apply plugin: 'com.android.application'

android {
  compileSdkVersion rootProject.ext.android.compileSdkVersion
  buildToolsVersion rootProject.ext.android.buildToolsVersion
  defaultConfig {
    applicationId "com.fanfull.initbag3"
    minSdkVersion rootProject.ext.android.minSdkVersion
    targetSdkVersion rootProject.ext.android.targetSdkVersion

    versionCode 3
    versionName "v4.0.1"

    ndk {
      abiFilters "armeabi"
    }
  }

  compileOptions {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }

  signingConfigs {
    release {
      //签名文件信息 保存在 local.properties 文件中
      Properties properties = new Properties()
      InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
      properties.load(inputStream)

      // 自行在 local.properties 文件中添加相应信 如：signing.storeFile=D\:\\workspace\\jks\\fanfull.jks
      storeFile file(properties.getProperty('signing.storeFile'))
      storePassword properties.getProperty('signing.storePassword')
      keyAlias properties.getProperty('signing.keyAlias')
      keyPassword properties.getProperty('signing.keyPassword')
      //            v2SigningEnabled true
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
      debuggable = true
      signingConfig signingConfigs.release
    }
  }

  applicationVariants.all { variant ->
    if (variant.buildType.name != "debug") {
      // apk 输出路径: rootDir/apk/
      def apkDirectory = new File(project.rootDir.absolutePath + "/apk/")

      // apk 输出名称: projectName_v7_1.0.0_Official_release_2019-05-20_09_56.apk
      def releaseTime = new Date().format("yyyy-MM-dd_hh_mm")
      def projectName = "袋初始化"
      def apkName = "${projectName}_" +
          "${defaultConfig.versionName}_" +
          "${variant.buildType.name}_" +
          "${releaseTime}.apk"
      variant.getPackageApplicationProvider().get().outputDirectory = apkDirectory
      variant.getPackageApplicationProvider().get().outputScope.apkDatas.forEach { apkData ->
        apkData.outputFileName = apkName
      }

      //       gradle 3.0+
      //      variant.getPackageApplication().outputDirectory = apkDirectory
      //      variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
      //        apkData.outputFileName = apkName
      //      }
    }
  }
}

dependencies {
  //  implementation files('libs/greendao-1.3.7.jar')

  implementation project(':libBase')
  implementation project(':libHardware')
  //  implementation 'com.gitee.fan_full:Handheld3Tools:v0.1.1'

  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  implementation 'androidx.recyclerview:recyclerview:1.1.0'

  // crash
  implementation 'cat.ereza:customactivityoncrash:2.3.0'
  implementation 'com.wanjian:cockroach:0.0.5'

  /* view */
  implementation 'com.lxj:xpopup:2.0.8'
  implementation 'com.github.medyo:android-about-page:1.3'

  /* db */
  debugImplementation rootProject.ext.dependencies["debug-db"]
  //  debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
  def room_version = "2.2.5"
  implementation "androidx.room:room-runtime:$room_version"
  annotationProcessor "androidx.room:room-compiler:$room_version"
  // optional - RxJava support for Room
  //  implementation "androidx.room:room-rxjava2:$room_version"
}
